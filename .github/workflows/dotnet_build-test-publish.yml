name: .NET - Build, test and publish reusable workflow

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest

      dotnet-version:
        required: false
        type: string
        default: 6.0.x
        
      generate-build-number:
        required: false
        type: boolean
        default: true
        
      additional-dotnet-version:
        required: false
        type: string
        default: ''
        
      include-prerelease:
        required: false
        type: boolean
        default: true
        
      workloads:
        required: false
        type: string
        default: ''
        
      windows-sdk-version:
        required: false
        type: string
        default: ''
        
      fetch-depth:
        required: false
        type: number
        default: 50
        
      conventional-commits-publish-conditions:
        required: false
        type: boolean
        default: true
        
      project-path:
        required: false
        type: string
        default: ''
        
      additional-project-path:
        required: false
        type: string
        default: ''
        
      configuration:
        required: false
        type: string
        default: Release
        
      use-msbuild:
        required: false
        type: boolean
        default: false
        
      vs-prerelease:
        required: false
        type: boolean
        default: true
        
      run-tests:
        required: false
        type: boolean
        default: true
        
      asset-path1:
        required: false
        type: string
        default: ''
        
      asset-name1:
        required: false
        type: string
        default: ''
        
      asset-content-type1:
        required: false
        type: string
        default: application/x-msi
        
      asset-path2:
        required: false
        type: string
        default: ''
        
      asset-name2:
        required: false
        type: string
        default: ''
        
      asset-content-type2:
        required: false
        type: string
        default: application/x-msi
        
      asset-path3:
        required: false
        type: string
        default: ''
        
      asset-name3:
        required: false
        type: string
        default: ''
        
      asset-content-type3:
        required: false
        type: string
        default: application/x-msi
        
      deploy-web-assembly-path:
        required: false
        type: string
        default: ''
        
      deploy-web-assembly-repo:
        required: false
        type: string
        default: ''
        
    secrets:
      nuget-key:
        required: false

      personal-token:
        required: false

jobs:
  build:
    runs-on: ${{ inputs.os }}
    name: Build, test and publish
    env:
      DOTNET_NOLOGO: true
      CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS: 
        ${{ !inputs.conventional-commits-publish-conditions || 
        contains(join(github.event.commits.*.message), 'fix:') || 
        contains(join(github.event.commits.*.message), 'feat:') || 
        contains(join(github.event.commits.*.message), 'perf:') }}
      PUBLISH-TO-NUGET: ${{ !!secrets.nuget-key }}
    
    steps:
    - name: Getting code
      uses: actions/checkout@v2
      with: 
        fetch-depth: ${{ inputs.fetch-depth }}

    - name: Generate build number
      if: inputs.generate-build-number && 
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      uses: einaregilsson/build-number@v3
      with:
        token: ${{ secrets.github_token }}
          
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        include-prerelease: ${{ inputs.include-prerelease }}
          
    - name: Setup additional .NET
      if: inputs.additional-dotnet-version != ''
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.additional-dotnet-version }}
        include-prerelease: ${{ inputs.include-prerelease }}
      
    - name: Setup MSBuild
      if: inputs.use-msbuild
      uses: microsoft/setup-msbuild@v1.0.3
      with:
        vs-prerelease: ${{ inputs.vs-prerelease }}

    - name: Setup Windows SDK
      if: inputs.windows-sdk-version != ''
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
      with:
        sdk-version: ${{ inputs.windows-sdk-version }}
      
    - name: Setup JDK
      if: contains(inputs.workloads, 'android')
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install workloads
      if: inputs.workloads != ''
      run: dotnet workload install
        ${{ inputs.workloads }}

    - name: Generate Release Notes on windows systems
      if: inputs.os == 'windows-latest' || 
          inputs.os == 'windows-2022'
      run: |
        echo 'PACKAGE_RELEASE_NOTES<<EOF' >> $env:GITHUB_ENV
        echo '⭐ Last 10 features:' >> $env:GITHUB_ENV
        git log -10 --pretty=format:"- %s %cs" --grep=feat >> $env:GITHUB_ENV
        echo '' >> $env:GITHUB_ENV
        echo '🐞 Last 10 bug fixes:' >> $env:GITHUB_ENV
        git log -10 --pretty=format:"- %s %cs" --grep=fix >> $env:GITHUB_ENV
        echo '' >> $env:GITHUB_ENV
        echo 'EOF' >> $env:GITHUB_ENV
        
    - name: Generate Release Notes on non-windows systems
      if: inputs.os != 'windows-latest' && 
          inputs.os != 'windows-2022'
      run: |
        echo 'PACKAGE_RELEASE_NOTES<<EOF' >> $GITHUB_ENV
        echo '⭐ Last 10 features:' >> $GITHUB_ENV
        git log -10 --pretty=format:"- %s %cs" --grep=feat >> $GITHUB_ENV
        echo '' >> $GITHUB_ENV
        echo '🐞 Last 10 bug fixes:' >> $GITHUB_ENV
        git log -10 --pretty=format:"- %s %cs" --grep=fix >> $GITHUB_ENV
        echo '' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    
    - name: Build using dotnet
      if: ${{ !inputs.use-msbuild }}
      run: dotnet build
        ${{ inputs.project-path }}
        --configuration ${{ inputs.configuration }}
        --nologo

    - name: Build using MSBuild
      if: inputs.use-msbuild
      run: msbuild
        ${{ inputs.project-path }}
        /property:Configuration=${{ inputs.configuration }}
        /restore

    - name: Run tests
      if: inputs.run-tests && !inputs.use-msbuild
      run: dotnet test
        ${{ inputs.project-path }}
        --configuration ${{ inputs.configuration }}
        --nologo
    
    - name: Build additional project using dotnet
      if: inputs.additional-project-path != '' && !inputs.use-msbuild
      run: dotnet build
        ${{ inputs.additional-project-path }}
        --configuration ${{ inputs.configuration }}
        --nologo

    - name: Build additional project using MSBuild
      if: inputs.additional-project-path != '' &&
          inputs.use-msbuild
      run: msbuild
        ${{ inputs.additional-project-path }}
        /property:Configuration=${{ inputs.configuration }}
        /restore

    - name: Run additional project tests
      if: inputs.additional-project-path != '' &&
          inputs.run-tests && !inputs.use-msbuild
      run: dotnet test
        ${{ inputs.additional-project-path }}
        --configuration ${{ inputs.configuration }}
        --nologo
        
    - name: Publish to NuGet
      if: env.PUBLISH-TO-NUGET == 'true' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      env:
        PUBLISH: ${{ steps.compute-conventional-commits-publish-conditions.outputs.publish }}
      run: dotnet nuget push
        src\**.nupkg
        --skip-duplicate
        --source https://api.nuget.org/v3/index.json
        --api-key ${{ secrets.nuget-key }}
        
    - name: Create Release
      if: inputs.asset-path1 != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      id: create_release
      uses: zendesk/action-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ env.PACKAGE_RELEASE_NOTES }}

    - name: Upload Asset 1
      if: inputs.asset-path1 != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.asset-path1 }}
        asset_name: ${{ inputs.asset-name1 }}
        asset_content_type: ${{ inputs.asset-content-type1 }}

    - name: Upload Asset 2
      if: inputs.asset-path2 != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.asset-path2 }}
        asset_name: ${{ inputs.asset-name2 }}
        asset_content_type: ${{ inputs.asset-content-type2 }}

    - name: Upload Asset 3
      if: inputs.asset-path3 != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.asset-path3 }}
        asset_name: ${{ inputs.asset-name3 }}
        asset_content_type: ${{ inputs.asset-content-type3 }}

    - name: Deploy WebAssembly to current repository GitHub Pages
      if: inputs.deploy-web-assembly-path != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true' &&
          inputs.deploy-web-assembly-repo == ''
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ${{ inputs.deploy-web-assembly-path }}
        jekyll: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy WebAssembly to other repository GitHub Pages
      if: inputs.deploy-web-assembly-path != '' &&
          env.CONVENTIONAL-COMMITS-PUBLISH-CONDITIONS == 'true' &&
          inputs.deploy-web-assembly-repo != ''
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ${{ inputs.deploy-web-assembly-path }}
        repo: ${{ inputs.deploy-web-assembly-repo }}
        jekyll: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_PAT: ${{ secrets.personal-token }}